name: SARIF check

on:
  pull_request:
    types: [opened, synchronize]


jobs:
  sarif-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      # - name: Check for presence of SARIF report
      #   run: |
      #     # List all changed files in the PR
      #     git fetch origin ${{ github.event.pull_request.base.ref }}:refs/remotes/origin/${{ github.event.pull_request.base.ref }}
      #     CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} $GITHUB_SHA)
      #     echo "Changed files: $CHANGED_FILES"
          
      #     # Check if the SARIF file is present
      #     if echo "$CHANGED_FILES" | grep -q 'semgrep-python-results.sarif'; then
      #       echo "SARIF file found."
      #       echo "sarif_found=true" >> $GITHUB_ENV
      #     else
      #       echo "SARIF file not found."
      #       echo "sarif_found=false" >> $GITHUB_ENV
      #     fi
      
      - name: Check for SARIF report
        run: |
          if curl -s -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.event.pull_request.url }}/files" | jq -r '.[].filename' | grep -q 'semgrep-python-results'; then
            echo "SARIF file found."
            echo "sarif_found=true" >> $GITHUB_ENV
          else
            echo "SARIF file not found."
            echo "sarif_found=false" >> $GITHUB_ENV
          fi
        
      - name: Add SARIF Reminder
        if: env.sarif_found == 'false'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}
          COMMENT_BODY="**This PR is missing a SARIF report.** Please refer to our local SAST scanning [guidelines](https://readme.md#anchor). We also provide a [walk-through](https://readme.md#anchor) for setting up a pre-commit hook on your local workstation."
          curl -s -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\": \"$COMMENT_BODY\"}" \
            "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments"
